{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["locales","require","localizer","dateFnsLocalizer","format","parse","startOfWeek","getDay","events","title","allDay","start","Date","end","App","useState","newEvent","setNewEvent","print","setPrint","error","setError","allEvents","setAllEvents","className","style","color","type","placeholder","onChange","e","target","value","width","marginRight","placeholderText","selected","stlye","marginTop","onClick","startAccessor","endAccessor","height","margin","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAWMA,EAAU,CACd,QAASC,EAAQ,KAEbC,EAAYC,YAAiB,CACjCC,iBACAC,gBACAC,sBACAC,iBACAP,YAGIQ,EAAS,CACb,CACEC,MAAO,cACPC,QAAQ,EACRC,MAAO,IAAIC,KAAK,KAAM,EAAG,GACzBC,IAAK,IAAID,KAAK,KAAM,EAAG,IAEzB,CACEH,MAAO,WACPE,MAAO,IAAIC,KAAK,KAAM,EAAG,GACzBC,IAAK,IAAID,KAAK,KAAM,EAAG,KAEzB,CACEH,MAAO,aACPE,MAAO,IAAIC,KAAK,KAAM,EAAG,IACzBC,IAAK,IAAID,KAAK,KAAM,EAAG,MAsEZE,MAlEf,WAAgB,IAAD,EACmBC,mBAAS,CAAEN,MAAO,GAAIE,MAAO,GAAIE,IAAK,KADzD,mBACNG,EADM,KACIC,EADJ,OAEaF,oBAAS,GAFtB,mBAENG,EAFM,KAECC,EAFD,OAGaJ,oBAAS,GAHtB,mBAGNK,EAHM,KAGCC,EAHD,OAIqBN,mBAASP,GAJ9B,mBAINc,EAJM,KAIKC,EAJL,KAqBb,OACE,sBAAKC,UAAU,MAAf,UACE,4CACCN,EACC,oBAAIO,MAAO,CAAEC,MAAO,SAApB,0CAEA,8CAEDN,EACC,oBAAIK,MAAO,CAAEC,MAAO,OAApB,+CACE,KACJ,gCACE,uBACEC,KAAK,OACLC,YAAY,WACZC,SAAU,SAACC,GAAD,OAAOb,EAAY,2BAAKD,GAAN,IAAgBP,MAAOqB,EAAEC,OAAOC,UAC5DP,MAAO,CAAEQ,MAAO,MAAOC,YAAa,QACpCF,MAAOhB,EAASP,QAElB,cAAC,IAAD,CACE0B,gBAAgB,aAChBV,MAAO,CAAES,YAAa,QACtBL,SAAU,SAAClB,GAAD,OAAWM,EAAY,2BAAKD,GAAN,IAAgBL,YAChDyB,SAAUpB,EAASL,QAErB,cAAC,IAAD,CACEkB,SAAU,SAAChB,GAAD,OAASI,EAAY,2BAAKD,GAAN,IAAgBH,UAC9CsB,gBAAgB,WAChBC,SAAUpB,EAASH,MAErB,wBAAQwB,MAAO,CAAEC,UAAW,QAAUC,QA7C5C,WACMvB,EAASL,MAAQ,IAAIC,KACvBS,GAAS,GAETE,EAAa,GAAD,mBAAKD,GAAL,CAAgBN,KAGP,KAAnBA,EAASP,OAAmC,KAAnBO,EAASL,OAAiC,KAAjBK,EAASH,MAC7DM,GAAS,GACTE,GAAS,IAGXJ,EAAY,CAAER,MAAO,GAAIE,MAAO,GAAIE,IAAK,MAiCrC,yBAIF,cAAC,IAAD,CACEX,UAAWA,EACXM,OAAQc,EACRkB,cAAc,QACdC,YAAY,MACZhB,MAAO,CAAEiB,OAAQ,IAAKC,OAAQ,cCzFvBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.bc685ec1.chunk.js","sourcesContent":["import format from \"date-fns/format\";\nimport getDay from \"date-fns/getDay\";\nimport parse from \"date-fns/parse\";\nimport startOfWeek from \"date-fns/startOfWeek\";\nimport React, { useState } from \"react\";\nimport { Calendar, dateFnsLocalizer } from \"react-big-calendar\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./App.css\";\n\nconst locales = {\n  \"en-US\": require(\"date-fns/locale/en-US\"),\n};\nconst localizer = dateFnsLocalizer({\n  format,\n  parse,\n  startOfWeek,\n  getDay,\n  locales,\n});\n\nconst events = [\n  {\n    title: \"Big Meeting\",\n    allDay: true,\n    start: new Date(2021, 6, 0),\n    end: new Date(2021, 6, 0),\n  },\n  {\n    title: \"Vacation\",\n    start: new Date(2021, 6, 7),\n    end: new Date(2021, 6, 10),\n  },\n  {\n    title: \"Conference\",\n    start: new Date(2021, 6, 20),\n    end: new Date(2021, 6, 23),\n  },\n];\n\nfunction App() {\n  const [newEvent, setNewEvent] = useState({ title: \"\", start: \"\", end: \"\" });\n  const [print, setPrint] = useState(false);\n  const [error, setError] = useState(false);\n  const [allEvents, setAllEvents] = useState(events);\n\n  function handleAddEvent() {\n    if (newEvent.start < new Date()) {\n      setError(true);\n    } else {\n      setAllEvents([...allEvents, newEvent]);\n    }\n\n    if (newEvent.title === \"\" || newEvent.start === \"\" || newEvent.end === \"\") {\n      setPrint(true);\n      setError(false);\n    }\n\n    setNewEvent({ title: \"\", start: \"\", end: \"\" });\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Restaurent</h1>\n      {print ? (\n        <h2 style={{ color: \"green\" }}>all the fields are neccessay</h2>\n      ) : (\n        <h2>Add calendar</h2>\n      )}\n      {error ? (\n        <h2 style={{ color: \"red\" }}>Booking date cannot be in reverse</h2>\n      ) : null}\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Add Name\"\n          onChange={(e) => setNewEvent({ ...newEvent, title: e.target.value })}\n          style={{ width: \"20%\", marginRight: \"10px\" }}\n          value={newEvent.title}\n        />\n        <DatePicker\n          placeholderText=\"Start Date\"\n          style={{ marginRight: \"10px\" }}\n          onChange={(start) => setNewEvent({ ...newEvent, start })}\n          selected={newEvent.start}\n        />\n        <DatePicker\n          onChange={(end) => setNewEvent({ ...newEvent, end })}\n          placeholderText=\"End Date\"\n          selected={newEvent.end}\n        />\n        <button stlye={{ marginTop: \"10px\" }} onClick={handleAddEvent}>\n          Book now\n        </button>\n      </div>\n      <Calendar\n        localizer={localizer}\n        events={allEvents}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        style={{ height: 500, margin: \"50px\" }}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}